# Multi-stage build for better caching
FROM python:3.11-slim as base

# Install system dependencies in a separate layer
RUN apt-get update && apt-get install -y \
    build-essential \
    curl \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Dependencies stage - this layer will be cached unless requirements change
FROM base as dependencies
WORKDIR /app

# Copy only requirements files first (better caching)
COPY config/requirements.txt config/requirements.api.txt ./

# Install Python dependencies (this layer will be cached)
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir -r requirements.txt && \
    pip install --no-cache-dir -r requirements.api.txt

# Final stage
FROM dependencies as final
WORKDIR /app

# Create directories and user before copying code
RUN useradd -m -u 1000 apiuser && \
    mkdir -p /app/.cache/huggingface/transformers \
             /app/.cache/huggingface/datasets \
             /app/.cache/sentence_transformers \
             /app/.cache/torch

# Copy application files (this layer changes when code changes)
COPY . .

# Set ownership
RUN chown -R apiuser:apiuser /app
USER apiuser

# Expose port
EXPOSE 8000

# Health check
HEALTHCHECK --interval=30s --timeout=60s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Start the API server
CMD ["uvicorn", "api_server:app", "--host", "0.0.0.0", "--port", "8000"]